openapi: "3.0.0"
info:
  version: 0.0.1
  title: DR Blythe API
  description: API for DR Blythe management

paths:
  /patient:
    post:
      summary: create new patient
      operationId: createPatient
      tags:
        - Patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
      responses:
        "201":
          description: create a new Patient
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
    get:
      summary: get all patients
      operationId: getAllPatients
      tags:
        - Patient
      responses:
        "200":
          description: list containing all patients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Patient"

  /patient/{patientId}:
    get:
      summary: get existing patient
      operationId: getPatientById
      parameters:
        - in: path
          name: patientId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the patient
      tags:
        - Patient
      responses:
        "200":
          description: patient is retreived
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"

    put:
      summary: update an existing patient
      description: update an existing patient by Id
      operationId: updatePatient
      parameters:
        - in: path
          name: patientId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
      tags:
        - Patient
      responses:
        "200":
          description: patient updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"

    delete:
      summary: Delete an existing patient
      description: Delete an existing patient by Id
      operationId: deletePatient
      tags:
        - Patient
      parameters:
        - in: path
          name: patientId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the patient
      responses:
        "200":
          description: Patient successfully deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"

  /appointment:
    post:
      summary: create new appointment
      operationId: createAppointment
      tags:
        - Appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Appointment"
      responses:
        "201":
          description: create a new Appointment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"

    get:
      summary: get all appointments
      operationId: getAllAppointments
      tags:
        - Appointment
      responses:
        "200":
          description: list containing all appointments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"

  /appointment/{appointmentId}:
    get:
      summary: get existing appointment
      operationId: getAppointmentById
      parameters:
        - in: path
          name: appointmentId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the appointment
      tags:
        - Appointment
      responses:
        "200":
          description: appointment is retreived
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"

    put:
      summary: update an existing appointment
      description: update an existing appointment by Id
      operationId: updateAppointment
      parameters:
        - in: path
          name: appointmentId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Appointment"
      tags:
        - Appointment
      responses:
        "200":
          description: appointment updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"

    delete:
      summary: Delete an existing appointment
      description: Delete an existing appointment by Id
      operationId: deleteAppointment
      tags:
        - Appointment
      parameters:
        - in: path
          name: appointmentId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the appointment
      responses:
        "200":
          description: Appointment successfully deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"

  /doctor:
    post:
      summary: create new doctor
      operationId: createDoctor
      tags:
        - Doctor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Doctor"
      responses:
        "201":
          description: create a new Doctor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doctor"
    get:
      summary: get all doctors
      operationId: getAllDoctors
      tags:
        - Doctor
      responses:
        "200":
          description: list containing all doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Doctor"

  /doctor/{doctorId}:
    get:
      summary: get existing doctor
      operationId: getDoctorById
      parameters:
        - in: path
          name: doctorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the doctor
      tags:
        - Doctor
      responses:
        "200":
          description: doctor is retreived
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doctor"
    put:
      summary: update an existing doctor
      description: update an existing doctor by Id
      operationId: updateDoctor
      parameters:
        - in: path
          name: doctorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the doctor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Doctor"
      tags:
        - Doctor
      responses:
        "200":
          description: doctor updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doctor"
    delete:
      summary: Delete an existing doctor
      description: Delete an existing doctor by Id
      operationId: deleteDoctor
      tags:
        - Doctor
      parameters:
        - in: path
          name: doctorId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the doctor
      responses:
        "200":
          description: Doctor successfully deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doctor"

components:
  schemas:
    Patient:
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        phone:
          type: string
        name:
          type: string
        emergencyContactName:
          type: string
        emergencyContactNumber:
          type: string
        insuranceProvider:
          type: string
        insurancePolicyNumber:
          type: string
        allergies:
          type: string
        currentMedication:
          type: string
        primaryConsent:
          type: boolean
        gender:
          type: string
        age:
          type: integer
        address:
          type: string
        occupation:
          type: string
        familyMedicalHistory:
          type: string
        pastMedicalHistory:
          type: string
        identificationType:
          type: string
        identificationDocumentId:
          type: string
        identificationDocumentUrl:
          type: string
        primaryPhysician:
          type: string
        isAssigned:
          type: boolean
        appointments:
          type: array
          items:
            $ref: "#/components/schemas/Appointment"

    Appointment:
      properties:
        id:
          type: string
          format: uuid
        primaryPhysician:
          type: string
        reason:
          type: string
        note:
          type: string
        cancellationReason:
          type: string
        schedule:
          type: string
          format: date
        status:
          type: string

    Doctor:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        contact_number:
          type: string
        address:
          type: string
        specialization:
          type: string
        experience_years:
          type: string
        image:
          type: string
        patients:
          type: array
          items:
            $ref: "#/components/schemas/Patient"
